// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectDoggo.Data;

namespace ProiectDoggo.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectDoggo.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Doggo", b =>
                {
                    b.Property<int>("DoggoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Breed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("DoggoID");

                    b.ToTable("Doggo");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Kennel", b =>
                {
                    b.Property<int>("KennelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("KennelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KennelID");

                    b.ToTable("Kennel");
                });

            modelBuilder.Entity("ProiectDoggo.Models.KennelDoggo", b =>
                {
                    b.Property<int>("DoggoID")
                        .HasColumnType("int");

                    b.Property<int>("KennelID")
                        .HasColumnType("int");

                    b.HasKey("DoggoID", "KennelID");

                    b.HasIndex("KennelID");

                    b.ToTable("KennelDoggo");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("DoggoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("DoggoID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ProiectDoggo.Models.KennelDoggo", b =>
                {
                    b.HasOne("ProiectDoggo.Models.Doggo", "Doggo")
                        .WithMany("KennelDoggoes")
                        .HasForeignKey("DoggoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectDoggo.Models.Kennel", "Kennel")
                        .WithMany("KennelDogs")
                        .HasForeignKey("KennelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doggo");

                    b.Navigation("Kennel");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Order", b =>
                {
                    b.HasOne("ProiectDoggo.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectDoggo.Models.Doggo", "Doggo")
                        .WithMany("Orders")
                        .HasForeignKey("DoggoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Doggo");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Doggo", b =>
                {
                    b.Navigation("KennelDoggoes");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ProiectDoggo.Models.Kennel", b =>
                {
                    b.Navigation("KennelDogs");
                });
#pragma warning restore 612, 618
        }
    }
}
