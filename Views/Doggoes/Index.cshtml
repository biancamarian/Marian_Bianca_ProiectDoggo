@model PaginatedList<ProiectDoggo.Models.Doggo>

@{
    ViewData["Title"] = "Doggo";
}

<h1>Doggo</h1>

<p>
    <a asp-action="Create">Creaza un catel nou</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Gaseste dupa rasa: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
            <a asp-action="Index">Inapoi la intreaga lista</a>
        </p>

    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BreedSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Rasa</a>
            </th>
            <th>
                Culoare
            </th>
            <th>
                Sex
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Pret</a>
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Breed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Color)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.DoggoID">Editare</a> |
                    <a asp-action="Details" asp-route-id="@item.DoggoID">Detali</a> |
                    <a asp-action="Delete" asp-route-id="@item.DoggoID">Sterge</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Inapoi
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Inainte
</a>
